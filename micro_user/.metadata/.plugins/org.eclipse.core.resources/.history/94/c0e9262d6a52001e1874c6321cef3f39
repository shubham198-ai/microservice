package com.example.microservice.service;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.example.microservice.Exception.ResourceNotFoundException;
import com.example.microservice.model.Hotel;
import com.example.microservice.model.Rating;
import com.example.microservice.model.User;
import com.example.microservice.repo.UserRepository;

@Service
public class UserServiceImpl implements UserService{
	@Autowired
	private UserRepository userRepository;
	@Autowired
	private RestTemplate restTemplate;
	
	private Logger logger=LoggerFactory.getLogger(UserServiceImpl.class);

	@Override
	public User saveUser(User user) {
		String randomUserId=UUID.randomUUID().toString();
		user.setUserId(randomUserId);
		return userRepository.save(user);
	}
	

	@Override
	public List<User> getAllUser() {
		// TODO Auto-generated method stub
		return userRepository.findAll();
	}

	@Override
	public User getUser(String userId) {
	User user=userRepository.findById(userId).orElseThrow(()->new ResourceNotFoundException("user with given id is not found on server"+userId));
		//fetching rating of above user from RatingService
	//http://localhost:8082/rating/give/22a7124e-bc01-4198-bad5-f8b6f5e4aaa2
	
	Rating[] ratingofusers= restTemplate.getForObject("http://localhost:8082/rating/give/"+user.getUserId(), Rating[].class);
	logger.info("{}",ratingofusers);
	
	
	List<Rating>ratings=Arrays.stream(ratingofusers).toList();
	
	List<Rating>ratingList=ratings.stream().map(rating->{ 
		
		//api call to get the hotel
		ResponseEntity<Hotel>forEntity=restTemplate.getForEntity("http://localhost:8088/hotels/"+rating.getHotelId(), Hotel.class);
	Hotel hotel=forEntity.getBody();
	//set hotel in rating
	rating.setHotel(hotel);
	//return the rating
	return rating;
	}).collect(Collectors.toList()) ;
	
	
		user.setRatings(ratingList);
	return user;
	}

}
